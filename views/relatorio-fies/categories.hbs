
	<!-- Contenedor Principal  -->
	<div class="main-wrapper">
		<!-- Titulo -->
		<h1 class="main-title">Categorias - Insights</h1>

		<div class="container">			
			<input name="category-css" id="idade" type="radio" checked>
			<input name="category-css" id="cor" type="radio">
			<input name="category-css" id="renda-familiar" type="radio">
			<input name="category-css" id="santa-catarina" type="radio">
			<input name="category-css" id="escola-publica" type="radio">
			
			<ul class="list-category">
				<li onclick="setInsightIdade()"><label for="idade">Idade</label></li>
				<li onclick="showGraficoCorRacial()"><label for="cor">Cor Racial</label></li>
				<li><label for="renda-familiar">Renda Familiar</label></li>
				<li><label for="santa-catarina">Santa Catarina</label></li>
				<li><label for="escola-publica">Escola Pública?</label></li>
			</ul>            
		</div>

        <div class="checkbox-container">
            <!-- Checkbox para tipos de gráfico -->
            <input type="checkbox" id="graficoLinha" onchange="showGrafico('linha')"> Linha
            <input type="checkbox" id="graficoPizza" onchange="showGrafico('pizza')"> Pizza
            <input type="checkbox" id="graficoBarras" onchange="showGrafico('barras')"> Barras
        </div>


        <div id="chart" class="" style="width: 100%; height: 500px;">
            
        </div>        
	</div>


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    let insight = '';

    function setInsightIdade() {
        insight = 'idade';

        const graficoLinha = document.getElementById('graficoLinha').checked;
        const graficoPizza = document.getElementById('graficoPizza').checked;
        const graficoBarras = document.getElementById('graficoBarras').checked; 

        if (graficoLinha) {
            showGraficoLinhasIdade();
        } else if (graficoPizza) {
            showGraficoPizzaIdade();
        } else if (graficoBarras) {
            showGraficoBarrasIdade();
        }
    }
    
    function showGrafico(tipo) {
        const graficoLinha = document.getElementById('graficoLinha').checked;
        const graficoPizza = document.getElementById('graficoPizza').checked;
        const graficoBarras = document.getElementById('graficoBarras').checked; 
    
        if (tipo === 'linha') {
            document.getElementById('graficoPizza').checked = false;
            document.getElementById('graficoBarras').checked = false;
        } else if (tipo === 'pizza') {
            document.getElementById('graficoLinha').checked = false;
            document.getElementById('graficoBarras').checked = false;
        } else if (tipo === 'barras') {
            document.getElementById('graficoLinha').checked = false;
            document.getElementById('graficoPizza').checked = false;
        }

        if(insight == 'idade'){
            if (graficoLinha) {
            showGraficoLinhasIdade();
            } else if (graficoPizza) {
                showGraficoPizzaIdade();
            } else if (graficoBarras) {
                showGraficoBarrasIdade();
            }
        }
        
    }
    function showGraficoLinhasIdade() {
        $.ajax({
            url: 'http://localhost:3004/relatorio-fies/get-age',
            type: 'get',
            dataType: 'json',
        }).done(function (data) {
            // Objeto para armazenar a contagem de cada faixa etária
            const contagemPorFaixaEtaria = {};

            // Definir as faixas etárias desejadas
            const faixasEtarias = [
                { min: 19, max: 24, label: '19-24' },
                { min: 25, max: 29, label: '25-29' },
                { min: 30, max: 34, label: '30-34' },
                { min: 35, max: 39, label: '35-39' },
                { min: 40, max: 44, label: '40-44' },
                { min: 45, max: 49, label: '45-49' },
                { min: 50, max: 54, label: '50-54' },
                { min: 55, max: 59, label: '55-59' },
                { min: 60, max: 64, label: '60-64' },
                { min: 65, max: 69, label: '65-69' },
                // Adicione mais faixas etárias conforme necessário
            ];

            // Inicializar contagem para cada faixa etária
            faixasEtarias.forEach(faixa => {
                contagemPorFaixaEtaria[faixa.label] = 0;
            });

            // Loop através do conjunto de dados para contar cada faixa etária
            data.forEach(item => {
                const idade = item.idade;

                // Encontrar a faixa etária correspondente
                const faixa = faixasEtarias.find(faixa => idade >= faixa.min && idade <= faixa.max);

                // Incrementar a contagem para a faixa etária encontrada
                if (faixa) {
                    contagemPorFaixaEtaria[faixa.label]++;
                }
            });

            // Converter o objeto em um array para usar no gráfico de linhas
            const dadosFormatados = Object.keys(contagemPorFaixaEtaria).map(faixa => ({
                faixa: faixa,
                quantidade: contagemPorFaixaEtaria[faixa]
            }));

            // Criar o gráfico de linhas com base nas faixas etárias
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(function () {
                const chartData = new google.visualization.DataTable();
                chartData.addColumn('string', 'Faixa Etária');
                chartData.addColumn('number', 'Número de Registros');
                chartData.addRows(dadosFormatados.map(item => [item.faixa, item.quantidade]));

                const options = {
                    title: 'Número de Registros por Faixa Etária',
                    curveType: 'function',
                    legend: { position: 'none' },
                };

                const chart = new google.visualization.LineChart(document.getElementById('chart'));
                chart.draw(chartData, options);
            });
        }).fail(function (jqXHR, textStatus, msg) {
            alert('Erro na requisição: ' + msg);
        });

    } 

    function showGraficoBarrasIdade() {
        $.ajax({
            url: 'http://localhost:3004/relatorio-fies/get-age',
            type: 'get',
            dataType: 'json',
        }).done(function (data) {
            // Objeto para armazenar a contagem de cada faixa etária
            const contagemPorFaixaEtaria = {};

            // Definir as faixas etárias desejadas
            const faixasEtarias = [
                { min: 19, max: 24, label: '19-24' },
                { min: 25, max: 29, label: '25-29' },
                { min: 30, max: 34, label: '30-34' },
                { min: 35, max: 39, label: '35-39' },
                { min: 40, max: 44, label: '40-44' },
                { min: 45, max: 49, label: '45-49' },
                { min: 50, max: 54, label: '50-54' },
                { min: 55, max: 59, label: '55-59' },
                { min: 60, max: 64, label: '60-64' },
                { min: 65, max: 69, label: '65-69' },
                // Adicione mais faixas etárias conforme necessário
            ];

            // Inicializar contagem para cada faixa etária
            faixasEtarias.forEach(faixa => {
                contagemPorFaixaEtaria[faixa.label] = 0;
            });

            // Loop através do conjunto de dados para contar cada faixa etária
            data.forEach(item => {
                const idade = item.idade;

                // Encontrar a faixa etária correspondente
                const faixa = faixasEtarias.find(faixa => idade >= faixa.min && idade <= faixa.max);

                // Incrementar a contagem para a faixa etária encontrada
                if (faixa) {
                    contagemPorFaixaEtaria[faixa.label]++;
                }
            });

            // Converter o objeto em um array para usar no gráfico de barras
            const dadosFormatados = Object.keys(contagemPorFaixaEtaria).map(faixa => ({
                faixa: faixa,
                quantidade: contagemPorFaixaEtaria[faixa]
            }));

            // Criar o gráfico de barras com base nas faixas etárias
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(function () {
                const chartData = new google.visualization.DataTable();
                chartData.addColumn('string', 'Faixa Etária');
                chartData.addColumn('number', 'Número de Registros');
                chartData.addRows(dadosFormatados.map(item => [item.faixa, item.quantidade]));

                const options = {
                    title: 'Número de Registros por Faixa Etária',
                    legend: { position: 'none' },
                    bars: 'vertical', // Tipo de gráfico de barras
                    bar: { groupWidth: '50%' }, // Espaçamento entre barras
                };

                const chart = new google.visualization.ColumnChart(document.getElementById('chart'));
                chart.draw(chartData, options);
            });
        }).fail(function (jqXHR, textStatus, msg) {
            alert('Erro na requisição: ' + msg);
        });
    }

    function showGraficoPizzaIdade() {
        $.ajax({
                url: 'http://localhost:3004/relatorio-fies/get-age',
                type: 'get',
                dataType: 'json',
            }).done(function (data) {
                // Objeto para armazenar a contagem de cada faixa etária
                const contagemPorFaixaEtaria = {};

                // Definir as faixas etárias desejadas
                const faixasEtarias = [
                    { min: 19, max: 24, label: '19-24' },
                    { min: 25, max: 29, label: '25-29' },
                    { min: 30, max: 34, label: '30-34' },
                    { min: 35, max: 39, label: '35-39' },
                    { min: 40, max: 44, label: '40-44' },
                    { min: 45, max: 49, label: '45-49' },
                    { min: 50, max: 54, label: '50-54' },
                    { min: 55, max: 59, label: '55-59' },
                    { min: 60, max: 64, label: '60-64' },
                    { min: 65, max: 69, label: '65-69' },
                    // Adicione mais faixas etárias conforme necessário
                ];

                // Inicializar contagem para cada faixa etária
                faixasEtarias.forEach(faixa => {
                    contagemPorFaixaEtaria[faixa.label] = 0;
                });

                // Loop através do conjunto de dados para contar cada faixa etária
                data.forEach(item => {
                    const idade = item.idade;

                    // Encontrar a faixa etária correspondente
                    const faixa = faixasEtarias.find(faixa => idade >= faixa.min && idade <= faixa.max);

                    // Incrementar a contagem para a faixa etária encontrada
                    if (faixa) {
                        contagemPorFaixaEtaria[faixa.label]++;
                    }
                });

                // Converter o objeto em um array para usar no gráfico de pizza
                const dadosFormatados = Object.keys(contagemPorFaixaEtaria).map(faixa => ({
                    faixa: faixa,
                    quantidade: contagemPorFaixaEtaria[faixa]
                }));

                // Criar o gráfico de pizza com base nas faixas etárias
                google.charts.load('current', { 'packages': ['corechart'] });
                google.charts.setOnLoadCallback(function () {
                    const chartData = new google.visualization.DataTable();
                    chartData.addColumn('string', 'Faixa Etária');
                    chartData.addColumn('number', 'Número de Registros');
                    chartData.addRows(dadosFormatados.map(item => [item.faixa, item.quantidade]));

                    const options = {
                        title: 'Número de Registros por Faixa Etária',
                    };

                    const chart = new google.visualization.PieChart(document.getElementById('chart'));
                    chart.draw(chartData, options);
                });
            }).fail(function (jqXHR, textStatus, msg) {
                alert('Erro na requisição: ' + msg);
            });   
    }  
</script>
