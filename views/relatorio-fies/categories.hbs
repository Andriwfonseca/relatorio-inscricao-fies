
	<!-- Contenedor Principal  -->
	<div class="main-wrapper">
		<!-- Titulo -->
		<h1 class="main-title">Categorias - Insights</h1>

		<div class="container">			
			<input name="category-css" id="idade" type="radio" checked>
			<input name="category-css" id="cor" type="radio">
			<input name="category-css" id="renda-familiar" type="radio">
			<input name="category-css" id="santa-catarina" type="radio">
			<input name="category-css" id="escola-publica" type="radio">
			
			<ul class="list-category">
				<li onclick="setInsightIdade()"><label for="idade">Idade</label></li>
				<li onclick="showGraficoCorRacial()"><label for="cor">Cor Racial</label></li>
				<li><label for="renda-familiar">Renda Familiar</label></li>
				<li><label for="santa-catarina">Santa Catarina</label></li>
				<li><label for="escola-publica">Escola Pública?</label></li>
			</ul>            
		</div>

        <div class="checkbox-container">
            <!-- Checkbox para tipos de gráfico -->
            <input type="checkbox" id="graficoLinha" onchange="showGrafico('linha')"> Linha
            <input type="checkbox" id="graficoPizza" onchange="showGrafico('pizza')"> Pizza
            <input type="checkbox" id="graficoBarras" onchange="showGrafico('barras')"> Barras
        </div>


        <div id="chart" class="" style="width: 100%; height: 500px;">
            
        </div>        
	</div>


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    let insight = '';

    function setInsightIdade() {
        insight = 'idade';

        const graficoLinha = document.getElementById('graficoLinha').checked;
        const graficoPizza = document.getElementById('graficoPizza').checked;
        const graficoBarras = document.getElementById('graficoBarras').checked; 

        if (graficoLinha) {
            showGraficoLinhasIdade();
        } else if (graficoPizza) {
            showGraficoPizzaIdade();
        } else if (graficoBarras) {
            showGraficoBarrasIdade();
        }
    }
    
    function showGrafico(tipo) {
        const graficoLinha = document.getElementById('graficoLinha').checked;
        const graficoPizza = document.getElementById('graficoPizza').checked;
        const graficoBarras = document.getElementById('graficoBarras').checked; 
    
        if (tipo === 'linha') {
            document.getElementById('graficoPizza').checked = false;
            document.getElementById('graficoBarras').checked = false;
        } else if (tipo === 'pizza') {
            document.getElementById('graficoLinha').checked = false;
            document.getElementById('graficoBarras').checked = false;
        } else if (tipo === 'barras') {
            document.getElementById('graficoLinha').checked = false;
            document.getElementById('graficoPizza').checked = false;
        }

        if(insight == 'idade'){
            if (graficoLinha) {
            showGraficoLinhasIdade();
            } else if (graficoPizza) {
                showGraficoPizzaIdade();
            } else if (graficoBarras) {
                showGraficoBarrasIdade();
            }
        }
        
    }
    function showGraficoLinhasIdade() {
        $.ajax({
            url: 'http://localhost:3004/relatorio-fies/get-age',
            type: 'get',
            dataType: 'json',
            }).done(function (data) {
            // Objeto para armazenar a contagem de cada idade
            const contagemPorIdade = {};

            // Loop através do conjunto de dados para contar cada idade
            data.forEach(item => {
                const idade = item.idade;
                contagemPorIdade[idade] = (contagemPorIdade[idade] || 0) + 1;
            });

            // Converter o objeto em um array para usar no gráfico de linhas
            const dadosFormatados = Object.keys(contagemPorIdade).map(idade => ({
                idade: parseInt(idade),
                quantidade: contagemPorIdade[idade]
            }));

            // Organizar os dados por idade
            dadosFormatados.sort((a, b) => a.idade - b.idade);

            // Criar o gráfico de linhas com base nas idades
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(function () {
                const chartData = new google.visualization.DataTable();
                chartData.addColumn('string', 'Idade');
                chartData.addColumn('number', 'Número de Registros');
                chartData.addRows(dadosFormatados.map(item => [item.idade.toString(), item.quantidade]));

                const options = {
                title: 'Número de Registros por Idade',
                curveType: 'function',
                legend: { position: 'none' },
                };

                const chart = new google.visualization.LineChart(document.getElementById('chart'));
                chart.draw(chartData, options);
            });
            }).fail(function (jqXHR, textStatus, msg) {
            alert('Erro na requisição: ' + msg);
            });




    } 

    function showGraficoBarrasIdade() {
        $.ajax({
            url: 'http://localhost:3004/relatorio-fies/get-age',
            type: 'get',
            dataType: 'json',
            }).done(function (data) {
            // Objeto para armazenar a contagem de cada idade
            const contagemPorIdade = {};

            // Loop através do conjunto de dados para contar cada idade
            data.forEach(item => {
                const idade = item.idade;
                contagemPorIdade[idade] = (contagemPorIdade[idade] || 0) + 1;
            });

            // Converter o objeto em um array para usar no gráfico de barras
            const dadosFormatados = Object.keys(contagemPorIdade).map(idade => ({
                idade: parseInt(idade),
                quantidade: contagemPorIdade[idade]
            }));

            // Organizar os dados por idade
            dadosFormatados.sort((a, b) => a.idade - b.idade);

            // Criar o gráfico de barras com base nas idades
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(function () {
                const chartData = new google.visualization.DataTable();
                chartData.addColumn('string', 'Idade');
                chartData.addColumn('number', 'Número de Registros');
                chartData.addRows(dadosFormatados.map(item => [item.idade.toString(), item.quantidade]));

                const options = {
                title: 'Número de Registros por Idade',
                legend: { position: 'none' },
                };

                const chart = new google.visualization.BarChart(document.getElementById('chart'));
                chart.draw(chartData, options);
            });
            }).fail(function (jqXHR, textStatus, msg) {
            alert('Erro na requisição: ' + msg);
            });
    }

    function showGraficoPizzaIdade() {
        $.ajax({
            url: 'http://localhost:3004/relatorio-fies/get-age',
            type: 'get',
            dataType: 'json',
            }).done(function (data) {
            // Objeto para armazenar a contagem de cada idade
            const contagemPorIdade = {};

            // Loop através do conjunto de dados para contar cada idade
            data.forEach(item => {
                const idade = item.idade;
                contagemPorIdade[idade] = (contagemPorIdade[idade] || 0) + 1;
            });

            // Converter o objeto em um array para usar no gráfico de pizza
            const dadosFormatados = Object.keys(contagemPorIdade).map(idade => ({
                idade: parseInt(idade),
                quantidade: contagemPorIdade[idade]
            }));

            // Organizar os dados por idade
            dadosFormatados.sort((a, b) => a.idade - b.idade);

            // Criar o gráfico de pizza com base nas idades
            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(function () {
                const chartData = new google.visualization.DataTable();
                chartData.addColumn('string', 'Idade');
                chartData.addColumn('number', 'Número de Registros');
                chartData.addRows(dadosFormatados.map(item => [item.idade.toString(), item.quantidade]));

                const options = {
                title: 'Número de Registros por Idade',
                };

                const chart = new google.visualization.PieChart(document.getElementById('chart'));
                chart.draw(chartData, options);
            });
            }).fail(function (jqXHR, textStatus, msg) {
            alert('Erro na requisição: ' + msg);
            });

    }  

    function showGraficoCorRacial() {
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {  
            var data = google.visualization.arrayToDataTable([
            ['Task', 'Hours per Day'],
            ['Work',     11],
            ['Eat',      2],
            ['Commute',  2],
            ['Watch TV', 2],
            ['Sleep',    7]
            ]);

            var options = {
            title: 'Comparativo de cor racial'
            };

            var chart = new google.visualization.PieChart(document.getElementById('chart'));

            chart.draw(data, options);
        }
    } 
</script>
